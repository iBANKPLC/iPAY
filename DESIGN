Ethplorer’s API is useful to get information about Ethereum tokens, balances, addresses, history of transactions, contracts and custom structures. There is no warranty for provided data.

If you need to track a lot of addresses - check the Bulk API Monitor

By using Ethplorer code fully or partially, API, widgets or any other service on your website or app you hereby agree with Terms of Usage and Privacy Policy

Free API-Key is freekey. Please do not overload the servers.

For full details about the transactions/addresses, it is a good idea to make direct links to the pages on Ethplorer's website. Also, we would much appreciate “Powered by Ethplorer.io” backlink on your pages.

API Keys Limits
Please do not exceed the limits or you'll be banned

Freekey limits
Requests are limited to 5 per second, 50/min, 200/hour, 2000/24hours, 3000/week.
Max age for timestamp parameter: 30 days
Freekey helps to easily start developing your project. It's not recommended to use freekey in a product mode.

Personal key limits
Requests per second: 10
Max count of transactions/operations in response: 1000
Max age for timestamp parameter: 1 year
Only one API-key should be used per project. Creating several keys, IP addresses, and exceeding the project limits violates our policy. Please do not do that. For multiple addresses tracking use Bulk API

For a free personal API key, please sign up for Ethplorer account and visit API Panel section.

API Index
Servers, Mainnet/Testnet
Target domains:

https://api.ethplorer.io/ for mainnet
https://kovan-api.ethplorer.io/ for testnet (Kovan)

Method GET
Each request should have a mandatory apiKey parameter.

API Methods
getLastBlock
getTokenInfo
getAddressInfo
getTxInfo
getTokenHistory
getAddressHistory
getAddressTransactions
getTop
getTopTokens
getTopTokenHolders
getTokenHistoryGrouped
getTokenPriceHistoryGrouped
Errors
Error response
Error codes
Get last block
Request

/getLastBlock
Response

{
    lastBlock:     # last scanned block number,
}
Examples

Request:

/getLastBlock?apiKey=freekey
Response:

{
    lastBlock: 9553012
}
Get token info
Request

/getTokenInfo/{address}
Response

{
    address:             # token address,
    totalSupply:         # total token supply,
    name:                # token name,
    symbol:              # token symbol,
    decimals:            # number of significant digits,
    price: {             # token price (false, if not available)
        rate:            # current rate
        currency:        # token price currency (USD)
        diff:            # 24 hours rate difference (in percent)
        diff7d:          # 7 days rate difference (in percent)
        diff30d:         # 30 days rate difference (in percent)
        marketCapUsd:    # market cap (USD)
        availableSupply: # available supply
        volume24h:       # 24 hours volume
        ts:              # last rate update timestamp
    },
    owner:               # token owner address,
    countOps:            # total count of token operations
    totalIn:             # total amount of incoming tokens
    totalOut:            # total amount of outgoing tokens
    transfersCount:      # total number of token operations
    ethTransfersCount:   # total number of ethereum operations, optional
    holdersCount:        # total numnber of token holders
    issuancesCount:      # total count of token issuances
    image:               # token image url, optional
    description:         # token description, optional
    website:             # token website url, optional
    lastUpdated:         # last update timestamp
}
Examples

Request:

/getTokenInfo/0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8?apiKey=freekey
Response:

{
    address:             "0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8",
    totalSupply:         "250000000000",
    name:                "Everex",
    symbol:              "EVX",
    decimals:            "4",
    price: {
        rate:            0.230116419553,
        currency:        'USD',
        diff:            -4.16,
        diff7d:          -22.43,
        diff30d:         -3.7029295574431,
        marketCapUsd:    5223642.7238531,
        availableSupply: 22700000,
        volume24h:       962488.940022787
        ts:              1582883824
    },
    owner:               "0x73fdd81b897edae0dd8323958982dc4da50f470d",
    countOps:            102917,
    transfersCount:	     102917,
    holdersCount:        6625,
    issuancesCount:      0,
    lastUpdated:         1582883592
}
Get address info
Request

/getAddressInfo/{address}
Additional params

token: show balances for specified token address only
showETHTotals: request total incoming and outgoing ETH values [true/false, default = false]
Response

{
    address: # address,
    ETH: {   # ETH specific information
        balance:  # ETH balance
        totalIn:  # Total incoming ETH value (showETHTotals parameter should be set to get this value)
        totalOut: # Total outgoing ETH value (showETHTotals parameter should be set to get this value)
    },
    contractInfo: {  # exists if specified address is a contract
       creatorAddress:  # contract creator address,
       transactionHash: # contract creation transaction hash,
       timestamp:       # contract creation timestamp
    },
    tokenInfo:  # exists if specified address is a token contract address (same format as token info),
    tokens: [   # exists if specified address has any token balances
        {
            tokenInfo: # token data (same format as token info),
            balance:   # token balance (as is, not reduced to a floating point value),
            totalIn:   # total incoming token value
            totalOut:  # total outgoing token value
        },
        ...
    ],
    countTxs:    # Total count of incoming and outgoing transactions (including creation one),
}
Examples

Request:

/getAddressInfo/0xff71cb760666ab06aa73f34995b42dd4b85ea07b?apiKey=freekey
Get transaction info
Request

/getTxInfo/{transaction hash}
Response

{
    hash:          # transaction hash,
    timestamp:     # transaction block time,
    blockNumber:   # transaction block number,
    confirmations: # number of confirmations,
    success:       # true if there were no errors during tx execution
    from:          # source address,
    to:            # destination address,
    value:         # ETH send value,
    input:         # transaction input data (hex),
    gasLimit:      # gas limit set to this transaction,
    gasUsed:       # gas used for this transaction,
    creates:       # address of created contract (if available),
    logs: [        # event logs
        {
            address: # log record address
            topics:  # log record topics
            data:    # log record data
        },
        ...
    ],
    operations: [  # token operations list for this transaction
        {
            # Same format as /getTokenHistory
        },
        ...
    ]
}
Examples

Request:

/getTxInfo/0x6aa670c983425eba23314459c48ae89b3b8d0e1089397c56400ce2da5ece9d26?apiKey=freekey
Get last token operations
Request

/getTokenHistory/[address]
Additional params

type:      show operations of specified type only ( default = transfer)
limit:     maximum number of operations [1 - 1000, default = 10]
timestamp: starting offset for operations [optional, unix timestamp]
Response

{
    operations: [
        {
            timestamp:       # operation timestamp
            transactionHash: # transaction hash
            tokenInfo:       # token data (same format as token info),
            type:            # operation type (transfer, approve, issuance, mint, burn, etc),
            address:         # operation target address (if one),
            from:            # source address (if two addresses involved),
            to:              # destination address (if two addresses involved),
            value:           # operation value (as is, not reduced to a floating point value),
        },
        ...
    ]
}
Examples

Show last 10 token operations:

/getTokenHistory?apiKey=freekey
Show last 5 transfers for token at address 0xff71cb760666ab06aa73f34995b42dd4b85ea07b:

/getTokenHistory/0xff71cb760666ab06aa73f34995b42dd4b85ea07b?apiKey=freekey&type=transfer&limit=5
Get last address operations
Request

/getAddressHistory/{address}
Additional params

token:     show only specified token address operations
type:      show operations of specified type only
limit:     maximum number of operations [1 - 10, default = 10]
timestamp: starting offset for operations [optional, unix timestamp]
Response

{
    operations: [
        {
            timestamp:       # operation timestamp
            transactionHash: # transaction hash
            tokenInfo:       # token data (same format as token info),
            type:            # operation type (transfer, approve, issuance, mint, burn, etc),
            address:         # operation target address (if one),
            from:            # source address (if two addresses involved),
            to:              # destination address (if two addresses involved),
            value:           # operation value (as is, not reduced to a floating point value),
        },
        ...
    ]
}
Examples

Show last transfers for address 0x1f5006dff7e123d550abc8a4c46792518401fcaf:

/getAddressHistory/0x1f5006dff7e123d550abc8a4c46792518401fcaf?apiKey=freekey&type=transfer
Get address transactions
Returns list of address transactions.

Request

/getAddressTransactions/{address}
Additional params

limit:          maximum number of operations [1 - 50, default = 10]
timestamp:      starting offset for operations [optional, unix timestamp]
showZeroValues: show transactions with zero ETH value, default = 0
Response

[
    {
        timestamp:       # operation timestamp
        from:            # source address (if two addresses involved),
        to:              # destination address (if two addresses involved),
        hash:            # transaction hash
        value:           # ETH value (as is, not reduced to a floating point value),
        input:           # input data
        success:         # true if transactions was completed, false if failed
    },
]
Examples

/getAddressTransactions/0xb297cacf0f91c86dd9d2fb47c6d12783121ab780?apiKey=freekey
Get top
Request

/getTop
Additional params

criteria: sort tokens by criteria [optional, trade/cap/count, trade - by trade volume, cap - by capitalization, count - by operations, default = trade]
limit:    maximum number of tokens [optional, 1 - 50, default = 50]
Response

{
    tokens: [
        {
            # token data (same format as token info),
            # token data by criteria and period (e.g. volume-7d-current - trade volume by latest 7 days, volume-7d-previous - trade volume by previous 7 days etc.)
        },
        ...
    ]
}
Examples

Shows top 50 tokens by capitalization:

/getTop?apiKey=freekey&criteria=cap
Get top tokens
Shows top 50 of the most active tokens for the last 30 days period:

Request

/getTopTokens
Response

{
    tokens: [
        {
            # token data (same format as token info)
        },
        ...
    ]
}
Examples

/getTopTokens?apiKey=freekey
Get top token holders
Request

/getTopTokenHolders/{address}
Additional params

limit:   maximum number of holders [1 - 1000 , default = 10].
*for freekey maximum is 100
Response

{
    holders: [
        {
            address:   # address of holder,
            balance:   # token balance,
            share:     # share of holder in percent
        },
        ...
    ]
}
Examples

Shows top 100 token holders:

/getTopTokenHolders/0xf3Db5Fa2C66B7aF3Eb0C0b782510816cbe4813b8?apiKey=freekey&limit=100
Get grouped token history
Request

/getTokenHistoryGrouped/[address]
Additional params

period:  show operations of specified days number only [optional, 30 days if not set, max. is 90 days]
Response

{
    countTxs: [        # grouped token history
        {
            _id: {
                year:  # transaction year
                month: # transaction month
                day:   # transaction day
            },
            ts:        # timestamp of the first transaction in group
            cnt:       # number of transaction in group
        },
        ...
    ]
}
Examples

Show operations for token at address 0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8:

/getTokenHistoryGrouped/0xf3db5fa2c66b7af3eb0c0b782510816cbe4813b8?apiKey=freekey
Get grouped token price history
Request

/getTokenPriceHistoryGrouped/[address]
Additional params

period:  show price history of specified days number only [optional, 365 days if not set]
Response

{   history
    {
        countTxs: [        # grouped token history
            {
                _id: {
                    year:  # transaction year
                    month: # transaction month
                    day:   # transaction day
                },
                ts:        # timestamp of the first transaction in group
                cnt:       # number of transaction in group
            },
            ...
        ],
        prices: [                 # grouped token price history
            {
                ts:               # timestamp of the token price
                date:             # date of the token price in YYYY-MM-DD format
                open:             # open token price
                close:            # close token price
                high:             # hign token price
                low:              # low token price
                volume:           # volume
                volumeConverted:  # volume in USD
                average:          # average token price
            },
            ...
        ]
    }
}
Examples

Get price history for the token at address 0x48c80f1f4d53d5951e5d5438b54cba84f29f32a5:

/getTokenPriceHistoryGrouped/0x48c80f1f4d53d5951e5d5438b54cba84f29f32a5?apiKey=freekey
Error response
{
    error: {
        code:    # error code (integer),
        message: # error message
    }
}
Error codes
Code	Message	HTTP Status
Authentication	
1	Invalid API Key	401
133	API key temporary suspended. Contact support.	403
135	Method disabled for this API key	403
136	getAddressHistory with token filter disabled for this API key	403
System errors	
3	Database connection failed	503
999	Internal Error	503
Invalid parameters errors	
101	Missing transaction hash	400
102	Invalid transaction hash format	400
104	Invalid address format	406
108	Invalid timestamp	406
111	Field address is required	400
150	Address is not a token contract	400
404	Transaction not found	404
